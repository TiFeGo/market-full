version: '3.9'

services:

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: 'rabbitmq'
    ports:
      - 5672:5672
      - 15672:15672

  cart_service:
    container_name: ns-cart-service
    build: ./market-cart-service
    ports:
      - "8003:8000"
    environment:
      JAEGER_AGENT_HOST: jaeger-all-in-one

  cart_mongodb:
    container_name: mob-mongo
    image: mongo:4.4.6
    volumes:
      - ./apps/cart_mongo:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=admin
   
  delivery_service:
    build: ./market-delivery-service
    container_name: ns-delivery-service
    ports:
      - "8004:8000"
    environment:
      JAEGER_AGENT_HOST: jaeger-all-in-one  
  
  delivery_mongodb:
    container_name: delivery-mongo
    image: mongo:4.4.6
    volumes:
      - ./apps/delivery_mongo:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=admin
   
  product_service:
    container_name: ns-product-service
    build:
      dockerfile: Dockerfile
      context: ./market-product-service
    ports:
      - '8001:8000'
    depends_on:
      - product_db
    environment:
      DATABASE_HOST: product_db
      DATABASE_PORT: 5432
      JAEGER_AGENT_HOST: jaeger-all-in-one
  
  product_db:
    image: postgres
    restart: always
    container_name: ns-product-db
    env_file:
      - .env
    volumes:
      - ./apps/product:/var/lib/postgresql/data
#      - ./config/postgresql:/docker-entrypoint-initdb.d
    environment:
      - POSTGRES_USER=${DATABASE_USERNAME}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
      - POSTGRES_DB=${DATABASE_NAME}
  
  jaeger-all-in-one:
    container_name: jaeger
    image: jaegertracing/all-in-one
    environment:
      - JAEGER_DISABLED=false
    expose:
      - "16686"
      - "6831/udp"
    ports:
      - "5775:5775/udp"
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778"
      - "16686:16686"
      - "14268:14268"
      - "9411:9411"

  user_service:
    container_name: ns-user-service
    build:
      dockerfile: Dockerfile
      context: ./market-user-service
    links:
      - user_db
    ports:
      - '8002:8000'
    depends_on:
      - user_db
    environment:
      DATABASE_HOST: user_db
      DATABASE_PORT: 5432
      JAEGER_AGENT_HOST: jaeger-all-in-one
      JWT_SECRETE: jwt_secrete

  user_db:
    image: postgres
    restart: always
    container_name: ns-user-db
    volumes:
      - ./apps/user_db:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
      POSTGRES_DB: ecommerce

  api_gateway:
    image: devopsfaith/krakend:watch
    container_name: api_gateway
    volumes:
      - ./config/krakenD:/etc/krakend
    ports:
      - "8080:8080"
    command: [ "run", "-d", "-c", "/etc/krakend/krakend.json" ]
    depends_on:
      - product_service
      - user_service
      - delivery_service
      - cart_service
    environment:
      - JWT_SECRETE=jwt_secrete

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./config/prometheus:/etc/prometheus/
    container_name: prometheus
    hostname: prometheus
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    restart: unless-stopped
    environment:
      TZ: "Europe/Moscow"

  grafana:
    container_name: grafana
    image: grafana/grafana
    hostname: grafana
    ports:
      - "3000:3000"

